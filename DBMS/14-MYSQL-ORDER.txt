-- Create Item table
CREATE TABLE Item (
  item_code INT PRIMARY KEY,
  item_name VARCHAR(255),
  qty_in_stock INT,
  reorder_level INT
);

-- Create Supplier table
CREATE TABLE Supplier (
  supplier_code INT PRIMARY KEY,
  supplier_name VARCHAR(255),
  address VARCHAR(255)
);

-- Create Can_Supply table
CREATE TABLE Can_Supply (
  supplier_code INT,
  item_code INT,
  PRIMARY KEY (supplier_code, item_code),
  FOREIGN KEY (supplier_code) REFERENCES Supplier(supplier_code),
  FOREIGN KEY (item_code) REFERENCES Item(item_code)
);



-- Insert data into Item table
INSERT INTO Item (item_code, item_name, qty_in_stock, reorder_level) VALUES
(1, 'Laptop', 20, 5),
(2, 'Printer', 15, 3),
(3, 'Monitor', 30, 10),
(4, 'Keyboard', 25, 8);

-- Insert data into Supplier table
INSERT INTO Supplier (supplier_code, supplier_name, address) VALUES
(101, 'ABC Electronics', '123 Main Street'),
(102, 'XYZ Tech', '456 Oak Avenue'),
(103, 'Tech Supplies', '789 Elm Street');

-- Insert data into Can_Supply table
INSERT INTO Can_Supply (supplier_code, item_code) VALUES
(101, 1),
(102, 2),
(103, 3),
(101, 4),
(102, 1),
(103, 2);



-- Query (i): List all those suppliers who can supply the given item
SELECT s.*
FROM Supplier s
JOIN Can_Supply cs ON s.supplier_code = cs.supplier_code
WHERE cs.item_code = 1;

-- Query (ii): List all those items which cannot be supplied by the given company
SELECT i.*
FROM Item i
WHERE NOT EXISTS (
  SELECT 1 FROM Can_Supply cs
  WHERE cs.item_code = i.item_code
  AND cs.supplier_code = 101
);
